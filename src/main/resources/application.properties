# ===============================
# = DATA SOURCE
# ===============================

## SSL
#server.port=8443
#server.ssl.key-store=./src/main/resources/your.jks
#server.ssl.key-store-password=your store password
#server.ssl.key-password=your password


# Set here configurations for the database connection
debug=true


# Username and password
## Dev
##spring.datasource.url = jdbc:mysql://127.0.0.1:3306/userdb
##spring.datasource.username = root
##spring.datasource.password = 1qaz2wsx

## Production
spring.datasource.url = jdbc:mysql://localhost:3306/userdb
spring.datasource.username = account
spring.datasource.password = password
spring.datasource.initialSize= 15
spring.datasource.maxActive= 30

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
